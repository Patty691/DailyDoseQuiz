import requests
from bs4 import BeautifulSoup

## om alleen deze functie te testen en veranderen


def get_medicine_info(medicine_name: str, atc_cluster: str) -> str:
    try:
        # Probeer standaard URL
        base_url = f"https://www.apotheek.nl/medicijnen/{medicine_name.lower()}"
        response = requests.get(base_url)

        # Als de standaard URL niet werkt, vraag handmatig om een juiste URL
        if response.status_code != 200:
            print(f"Kon URL voor {medicine_name} niet vinden.")
            full_url = input(f"Plak de exacte URL voor '{medicine_name}' uit ATC-cluster {atc_cluster}:\n> ")
            response = requests.get(full_url)
    except Exception as e:
        raise RuntimeError(f"Netwerkfout bij ophalen van data: {e}")

    # Hier begint de parsing en herhaal je alleen als de structuur niet klopt
    while True:
        try:
            soup = BeautifulSoup(response.text, "html.parser")
            list_items = soup.find_all("li", class_="listItemContent_container__25F5W")

            if not list_items:
                print(f"Deze URL bevat niet de juiste structuur voor informatie over {medicine_name}.")
                full_url = input(f"Plak een andere juiste URL waarbij de info begint met 'Belangrijke informatie over':\n> ")
                response = requests.get(full_url)
                continue  # opnieuw proberen met de nieuwe URL

            # Structuur klopt, ga door met verwerken
            relevant_text = []
            for item in list_items:
                title = item.find("h2")
                if title:
                    relevant_text.append(title.get_text(strip=False))
                content = item.find("div", class_="listItemContent_content__w3Hqp")
                if content:
                    relevant_text.append(content.get_text(separator=" ", strip=False))

            cleaned_text = "\n\n".join(relevant_text)
            return cleaned_text

        except Exception as e:
            raise RuntimeError(f"Fout bij verwerken van HTML-pagina: {e}")


if __name__ == "__main__":
    medicine_name = "asa"  # Vervang dit door de naam van het medicijn dat je wilt gebruiken
    atc_cluster = "C07"  # Vervang dit door de ATC-cluster die je wilt gebruiken
    medicine_info = get_medicine_info(medicine_name, atc_cluster)
    print(medicine_info)    
    
 